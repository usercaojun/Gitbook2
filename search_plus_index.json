{"./":{"url":"./","title":"GitBook","keywords":"","body":"目录 一.Gitbook 简介 创建 GitBook GitBook.com 环境依赖 二.安装 gitbook 创建项目 安装 Node.js 安装 gitbook 查看版本 初始化命令 启动服务 页面测试 目录结构 三.书写代码 Markdown 语法 HTML 语言 四.添加目录 目录设置 一级目录 多级目录 添加锚点 添加折叠功能 添加链接 添加灰色无链接标题 添加水平分割线 五.常用设置 添加书籍信息 添加 SEO 优化 添加专业术语 设置忽略文件 添加链接导航 添加自定义样式 六.安装插件 插件查询 插件配置 安装插件 常用插件 七.部署到远端 发布到 Github Pages 发布到 CodingPages 发布到 Gitee 发布到 coding 八.绑定域名 服务器选择（VPS/云服务器/虚拟主机） 将域名绑定到 Github 将域名绑定到 Coding "},"Gitbook/01.jianjie.html":{"url":"Gitbook/01.jianjie.html","title":"GitBook 简介","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 创建 GitBook GitBook.com GitBook 网址 环境依赖 GitBook 简介 GitBook 是一款基于 Node.js 开发的开源的工具，可以通过命令行的方式创建电子书项目，再使用 MarkDown 编写电子书内容，然后生成 PDF、ePub、mobi 格式的电子书，或生成一个静态站点 创建 GitBook 创建 GitBook 有两种方式，分 在线方式 和 离线方式 在线方式： 在 GitBook.com 编辑 GitBook。（需要注册 GitBook 账号，但是需要翻墙） 教程1 教程2 离线方式： 使用命令创建 GitBook，使用编辑器编辑，可以通过 Git 推送 GitHub 或 Gitee 等远端 GitBook.com GitBook.com 是一个相应的在线平台,可用于创建和托管 GitBook 格式编写的书籍，集成托管、合作开发和在线编辑功能 GitBook.com 免费用户可享有的服务 1本私有书籍 托管不限数量的公开书籍 售卖不限数量的书籍，并分享 80% 的书籍收入 不限数量的协作者 免费的在线书籍编辑器 GitBook 网址 官网：https://www.gitbook.com/源码：https://github.com/GitbookIO/gitbook 开发文档( API & 插件) 地址:https://developer.gitbook.com/ ●●●● 环境依赖 Node.js 6.17.1（7以上的版本不能使用） npm Git gitbook 2.6.7（3以上的版本生成的HTML不能直接用双击打开） gitbook-cli "},"Gitbook/02.xiazaianzhuang.html":{"url":"Gitbook/02.xiazaianzhuang.html","title":"GitBook 下载安装","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 安装 Node.js 查看 Node 版本 安装 GitBook 安装 gitbook-cli 安装 gitbook 查看 gitbook 版本 多版本 安装失败 缓存异常 node版本过高 Gitbook 下载安装 安装 Node.js GitBook 基于 Node.js，可以用来创建电子书，包括各种API文档、规范、指南等。 Node.js 下载地址：https://nodejs.org/zh-cn/ 查看 Node 版本 node -v 安装 GitBook 安装 gitbook-cli gitbook-cli 是gitbook 的命令行的工具，通过它才能够安装gitbook，所以需要先安装它 npm install gitbook-cli -g 安装 gitbook gitbook fetch // 安装最新版本 gitbook fetch 2.6.7 // 安装具体版本 查看 gitbook 版本 gitbook -V gitbook ls 多版本 1.可以通过 gitbook fetch xxxxx 安装多个不同的版本 2.如果没有特殊需求只安装 2.6.7 足以 3.如果有多个版本，可通过 gitbook -v 版本号 指定运行对应的版本 安装失败 缓存异常 偶尔也会出现上述操作解决不了的问题，譬如 npm 的缓存文件异常，就需要在安装前执行 npm cache clean --force 清空缓存目录 清空缓存目录 node版本过高 如果输入 gitbook init 后，看到下图所示的红色信息，则表示 node 版本太高，经过测试 gitbook2.6.7 配合的node版本是小于 7 的，即可以 node6 的任意版本 "},"Gitbook/03.chuangjianxiangmu.html":{"url":"Gitbook/03.chuangjianxiangmu.html","title":"GitBook 创建项目","keywords":"","body":"Gitbook 创建项目 1.手动创建项目文件夹 2.在项目文件夹下进入 CMD，输入命令 gitbook init 执行完后，会在项目文件下创建 REAME.md（介绍） 和 SUMMARY.md（目录） 两个文件 README.md 书籍的介绍、封面，对应的是首页 index.html 的内容 SUMMARY.md 书籍的目录 3.运行gitbook本地服务器 gitbook serve 使用 gitbook serve 会在项目根目录下创建 _book 文件夹此时，双击index.html就能够在没有服务器的情况下浏览文章了 4.在线预览 http://localhost:4000 5.指定端口 gitbook serve --port 2333 "},"Gitbook/031.mulujiegou.html":{"url":"Gitbook/031.mulujiegou.html","title":"目录结构","keywords":"","body":"目录结构 ·├─ book.json├─ README.md├─ SUMMARY.md├─ GLOSSARY.md├─ _book/ ├─ .gitignore、.bookignore、.ignore过滤文件或文件夹 book.json 配置数据 (可选)，但是作者认为必须得有，个人习惯 README.md 书本的第一页内容，通常是目录或封面 SUMMARY.md 用来定义章节或子章节目录结构，并用于生成图书目录 GLOSSARY.md 词汇/注释术语列表 (可选) "},"Gitbook/032.cuowuchuli.html":{"url":"Gitbook/032.cuowuchuli.html","title":"错误处理","keywords":"","body":"错误处理 错误提示：Error: ENOENT: no such file or directory 这是一个 bug 存在于 gitbook v3.2.3，解决方法如下： 在用户目录下找到这个文件： C:\\Users\\Administrator.gitbook\\versions\\3.2.3\\lib\\output\\website\\copyPluginAssets.js 第 67 行 和 112 行，将 confirm: true 都改为 confirm: false，再次运行就对头了。 "},"Gitbook/04.shuchu.html":{"url":"Gitbook/04.shuchu.html","title":"GitBook 输出","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 输出方式 静态网站 PDF (Portable Document Format) ePub (electrontic publication) Mobi (Mobipocket) 构建书籍 安装ebook-convert 下载calibre 验证ebook-convert版本 生成电子书 Gitbook 输出 输出方式 GitBook 可以把你的书本生成为不同格式的电子书和html静态网址 静态网站 这是默认的格式。它生成一个可交互的静态站点。 PDF (Portable Document Format) Portable Document Format (PDF) 是一以一种独立于软硬件，以及操作系统的方式来保存文档的格式。这是一种很普遍的格式。文件拥有的扩展名为 ​.pdf​ 。 ePub (electrontic publication) EPUB ( electrontic publicaton 的简称，有时称它为 epub ) 是一个由国际电子出版物论坛 (IDPF) 制定的免费并开放的电子书标准。文件拥有的扩展名为 ​.epub​ ，苹果和谷歌的设备支持 ePub 格式。 Mobi (Mobipocket) Mobipocket 电子书格式是基于使用 XHTML 的开放电子书标准，并且可以包含 JavaScript 以及框架。亚马逊的设备 (Kindle) 支持这样的格式。 构建书籍 生成电子书 (epub, mobi, pdf) 时需要 ebook-convert。 安装ebook-convert ebook-convert 是能够自由转化格式的一个命令行工具，已经包含在 calibre 软件里面了。 下载calibre 下载地址：calibre-ebook.com/ 验证ebook-convert版本 ebook-convert --version 如果输入上面的命令后提示错误，说明你还需要将 calibre 的安装目录添加到系统的环境变量中。 生成电子书 语法： 生成 PDF 格式的电子书：gitbook pdf ./ ./mybook.pdf 生成 epub 格式的电子书：gitbook epub ./ ./mybook.epub 生成 mobi 格式的电子书：gitbook mobi ./ ./mybook.mobi 如果生成不了，你可能还需要安装一些工具，比如 ebook-convert。或者在 Typora 中安装 Pandoc 进行导出。 "},"Gitbook/042.dabaofabu.html":{"url":"Gitbook/042.dabaofabu.html","title":"打包发布","keywords":"","body":"打包发布 执行 gitbook build 命令即可打包，打包后，默认将生成的静态网站输出到 _book 目录 // 指定目录 gitbook build [书籍路径] [输出路径] gitbook build ./ ./output "},"Gitbook/05.zhangjie.html":{"url":"Gitbook/05.zhangjie.html","title":"GitBook 章节","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 章节/子章节/外部链 标题/水平分割线 添加锚点 添加折叠功能 Gitbook 章节 GitBook 使用文件 ​SUMMARY.md​ 来定义书本的章节和子章节的结构 章节/子章节/外部链 章节和子章节用 tab 键来分级 * [Git](README.md) * [GitHub](README.md) * [GitBook](README.md) * [子目录1](zimulu.md) * [子目录2](zimulu.md) * [子目录2](https://www.baidu.com) 标题/水平分割线 # 或者 — 可以进行不同 Part 的分类，分别由标题或者水平分割线方式表示不同的部分 ### Git * [Git](README.md) ---- ### GitHub * [GitHub](README.md) * [子目录1](zimulu.md) * [子目录2](zimulu.md) * [子目录2](https://www.baidu.com) ---- ### GitBook * [GitBook](README.md) * [子目录1](zimulu.md) * [子目录2](zimulu.md) * [子目录2](https://www.baidu.com) 添加锚点 在章节路径 md 文件结尾使用 # 号加上文章内容中章节的标题就能实现区域导航 ### 第I部分 * [第I部分](part1/README.md) * [标题1](part1/README.md#one) * [标题2](part1/README.md#two) 添加折叠功能 "},"Gitbook/06.Markdown.html":{"url":"Gitbook/06.Markdown.html","title":"Markdown 语法","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 Markdown 应用 Markdown 在线编辑 编辑器 VS Code Typora docsify 效果对比 Markdown Markdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式 Markdown的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客世界上最流行的博客平台 WordPress 和大型 CMS 如 Joomla、Drupal 都能很好的支持 Markdown。完全采用 Markdown 编辑器的博客平台有 Ghost 和 Typecho。 官网 Markdown 应用 博客园 Markdown 在线编辑 作业部落 https://www.zybuluo.com/mdeditor马克飞象 https://maxiang.io/菜鸟工具 http://c.runoob.com/front-end/712Marked https://marked.js.org/demo/ 编辑器 Ulysses、Sublime Text、Atom、Vim、Mou、VS Code、MarkdownPad、Typora、Haroopad连接 VS Code Typora docsify docsify 学习笔记 效果对比 Ulysses：Ulysses 会自作主张，把文档里面的``更改为\\“，使代码块不能正常显示；Sublime和Atom的Preview和Edit需要安装不同的插件，Code下载之后就支持语法显示和预览，不需要任何配置就可以开工；Mou很好，所见即所得，但是运行慢，打开大文件很卡，正式版也不知道要等到啥时候；Marxico:Marxico 功能强大，可是需要连接Evernote来用，我都没办法打开一个本地文件夹……；Vim：Vim 预览功能还要靠外部浏览器，再加上Vim只支持等宽字体，写代码还行，写文章就有点力不从心； "},"Gitbook/061.yufa.html":{"url":"Gitbook/061.yufa.html","title":"语法","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 文本 标题 标题编号 段落 换行 字体 空格 对齐 颜色 脚注 脚注链接 块引用 自定义列表 HTML样式 任务清单 emoji 表情 线条 分隔线 删除线 下划线 列表 无序列表 有序列表 列表嵌套 代码 行内代码 代码区块 转义字符 代码隐藏 表格 对齐方式 格式化表格中的文字 转义管道字符 使用标签 使用表格工具 链接 超链接 猫点 参考样式链接 添加链接标题 显示网址和电子邮件地址 格式化链接 在url中使用括号 图片 添加图片标题 添加图片链接 参考样式图片链接 设置图片尺寸 本地图片 使用 base64 格式 图片插件 视屏和GIF动画 高级 HTML代码 数学公式 图表 流程图 Markdown 常用语法 文本 标题 使用#，可表示1-6级标题 # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 标题编号 许多Markdown处理器支持标题的自定义ID-一些Markdown处理器会自动添加它们。添加自定义的ID，您可以直接链接到标题，并用CSS修改。要添加自定义标题ID，请在与标题相同的行上用大括号括起该自定义ID。 ### My Great Heading {#custom-id} 同HTML语法 My Great Heading 段落 使用空白行分隔一行 换行 段落使用两个以上的空格加回车，也可以使用 标签 字体 Markdown 可以使用以下几种字体： *斜体*，_斜体_ **粗体**，__粗体__ ***粗斜体***，___粗斜体___ 斜体文字 斜体文字 粗体文字 粗体文字 粗斜体文字 粗斜体文字 空格 &nbsp;&nbsp;&nbsp;&nbsp;不断行的空白格 &ensp;&ensp;&ensp;&ensp;半方大的空白 &emsp;&emsp;&emsp;&emsp;全方大的空白     不断行的空白格    半方大的空白    全方大的空白 对齐 居左文本 居中文本 居右文本 居左文本 居中文本 居右文本 颜色 This is red This is red 脚注 脚注是对文本的补充说明。使用 [^keyword] 表示注脚。 这是一个注脚[^footnote]的样例。 这是第二个注脚[^footnote2]的样例。 这是一个注脚footnote的样例。这是第二个注脚footnote2的样例。 脚注链接 这是一个注脚1的样例。这是第二个注脚2的样例。 1. 这是一个 注脚 的 文本。 ↩ 2. 这是另一个 注脚 的 文本。 ↩ 块引用 块引用又叫文字引用或区块引用 块引用是在段落开头使用>符号，然后后面紧跟一个空格符号 块引用可以有多个 >，表示层级更深，也可以在块引用中添加其他元素 > ### 整理知识，学习笔记 > > * 发布日记，杂文，所见所想 > * 撰写发布技术文稿（代码支持） > * 撰写发布学术论文（LaTeX 公式支持） 整理知识，学习笔记 发布日记，杂文，所见所想 撰写发布技术文稿（代码支持） 撰写发布学术论文（LaTeX 公式支持） 自定义列表 有些Markdown处理器允许您创建自定义列表和术语及其相应的定义。 要创建定义列表，请在第一行上键入术语。下一行，键入一个冒号后跟一个空格和定义。 First Term : This is the definition of the first term. Second Term : This is one definition of the second term. : This is another definition of the second term. First Term: This is the definition of the first term. Second Term: This is one definition of the second term.: This is another definition of the second term. HTML样式 First Term This is the definition of the first term. Second Term This is one definition of the second term. This is another definition of the second term. First Term This is the definition of the first term. Second Term This is one definition of the second term. This is another definition of the second term. 任务清单 任务列表使您可以创建带有复选框的项目列表。在支持任务列表的Markdown应用程序中，复选框将显示在内容旁边。要创建任务列表，请在任务列表项之前添加破折号（-）和方括号，并[ ]在其前面加上一个空格（）。要选择一个复选框，请x在方括号（[x]）之间添加in 。 - [ ] 支持以 PDF 格式导出文稿 - [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 - [x] 新增 Todo 列表功能 - [x] 修复 LaTex 公式渲染问题 - [x] 新增 LaTex 公式编号功能 [ ] 支持以 PDF 格式导出文稿 [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 [x] 新增 Todo 列表功能 [x] 修复 LaTex 公式渲染问题 [x] 新增 LaTex 公式编号功能 emoji 表情 在 Typora 中，你可以用 :emoji: 的形式来打出 emoji，软件会自动给出图形的提示 线条 分隔线 要创建水平线，可以单独在一行上使用三个或更多的星号（*），破折号（---）或下划线（_）。这三个的渲染输出看起来都相同 *** * * * ****** - - - ------ 删除线 如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线~~即可 ~~删除文字~~ 删除文字 下划线 下划线可以通过HTML的标签来实现 带下划线文本 带下划线文本 列表 无序列表 无序列表使用星号(*)、加号(+)或者减号(-)作为标记，可嵌套 + 一层 - 二层 - 二层 * 三层 + 四层 + 一层 一层 二层 二层 三层 四层 一层 有序列表 有序列表直接在文字有加上1. 2. 3. 来表示，符号和文字之间加上一个空格字符 1. 第一项 2. 第二项 3. 第三项 第一项 第二项 第三项 列表嵌套 列表嵌套只需在子列表的选项前添加四个空格即可 1. 第一项： - 第一项嵌套的第一个元素 - 第一项嵌套的第二个元素 2. 第二项： - 第二项嵌套的第一个元素 - 第二项嵌套的第二个元素 第一项： 第一项嵌套的第一个元素 第一项嵌套的第二个元素 第二项： 第二项嵌套的第一个元素 第二项嵌套的第二个元素 代码 行内代码 如果是段落上的一个函数或片段的代码可以用两个'把它包起来 `print('Markdown1')` `print('Markdown2')` print('Markdown1')print('Markdown2') 代码区块 代码区块使用4个空格或者一个制表符（Tab键）。 print('Markdown') 也可以用 ``` 包裹一段代码，并指定一种语言（也可以不指定）： $(document).read(function){ alert('Markdown'); }); 转义字符 要显示原义字符，请在字符前面添加反斜杠（\\） Mrkdown支持以下这些符号前面加上反斜杠来帮助插入普通符号 \\ 反斜线 ` 反引号 * 星号 _ 下划线 {} 花括号 [] 方括号 () 小括号 # 井字号 + 加号 - 减号 . 英文句点 ! 感叹号 这是一个code这是一个`code` 代码隐藏 案例标题 隐藏的代码内容 案例标题 隐藏的代码内容 表格 要添加表，请使用三个或多个连字符（---）创建每列的标题，并使用管道（|）分隔每列。您可以选择在表的任一端添加管道。 |商品|数量|单价| |:---|---:|:---:| |苹果|10|\\$1| |电脑|1|\\$1000| 商品 数量 单价 苹果 10 $1 电脑 1 $1000 对齐方式 可以通过:在标题行内的连字符的左侧，右侧或两侧添加一个冒号（），以使列中的文本左，右或居中对齐。 :- 设置内容或标题栏左对齐 -: 设置内容或标题栏右对齐 :-: 设置内容或标题栏居中对齐 格式化表格中的文字 可以格式化表格中的文本。可以添加链接，代码（`仅在刻度线（）中显示单词或短语，而不能在代码块中添加）和强调。不能添加标题，块引用，列表，水平规则，图像或HTML标签。 转义管道字符 可以|使用表格的HTML字符代码（|）在表中显示竖线（|）字符。 | $a &#124;&#124; $b | 逻辑或 | TRUE，如果 $a 或 $b 任一为 TRUE。 | 使用标签 值班人员 星期一 星期二 星期三 李强 张明 王平 值班人员 星期一 星期二 星期三 李强 张明 王平 使用表格工具 使用连字符和管道创建表可能很麻烦。为了加快这一过程，请尝试使用Markdown Tables Generator。使用图形界面构建表，然后将生成的Markdown格式的文本复制到文件中。 链接 超链接 方法1：使用Markdown 语法 [链接名称](链接地址)或者 新浪新闻https://news.sina.com.cn/ 方法2：使用 标签 百度一下 百度一下 猫点 我是一个锚点 或 ### My Great Heading {#custom-id} [点我跳转](#anchor) 我是一个锚点 点我跳转 参考样式链接 引用样式的链接分为两部分：与文本保持内联的部分以及在文件中其他位置存储的部分，以使文本易于阅读。 第一部分： 添加链接变量 这个链接用1作为网址变量**\\[baidu]\\[1]** 这个链接用markdown作为网址变量**\\[Markdown]\\[markdown]** 第二部分： 在文档的结尾为变量赋值(网址) [1]: http://www.baidu.com [markdown]: http://www.markdown.com 效果： 链接也可以用变量来代替，文档末尾附带变量地址：这个链接用1作为网址变量baidu这个链接用markdown作为网址变量Markdown然后文档的结尾为变量赋值(网址) 添加链接标题 您可以选择为链接添加标题。当用户将鼠标悬停在链接上时，这将显示为工具提示。要添加标题，在圆括号中用双引号添加，与链接中间需要添加一个空格。 My favorite search engine is Duck Duck Go. 显示网址和电子邮件地址 要将URL或电子邮件地址快速转换为链接，请将其括在尖括号中。 https://markdown.p2hp.comfake@example.com 许多Markdown处理器会自动将URL转换为链接。 这意味着如果您输入http://www.example.com，即使您没有使用方括号，您的Markdown处理器也会自动将其转换为链接。 https://markdown.p2hp.com 格式化链接 为了强调链接，请在方括号和括号之前和之后添加星号。 I love supporting the **[EFF](https://eff.org)**. This is the *[Markdown Guide](https://markdown.p2hp.com)*. I love supporting the EFF.This is the Markdown Guide. 在url中使用括号 markdown标记url时，需要使用方括号和圆括号，语法如下： [文字信息](http://xxxx) 如果url中本身包含圆括号，就会导致链接地址出错 解决办法是将行内式的链接地址，改写成参考式的地址： [Journal of Communication][1] [1]: http://onlinelibrary.wiley.com/journal/10.1111/(ISSN)1460-2466 Journal of Communication1460-2466) 传播学刊。影响因子3.8432。 Journal of Communication传播学刊。影响因子3.8432。 图片 要添加图像，请添加感叹号（!），然后在括号中添加替代文本，并在括号中添加图像资源的路径或URL。 ![alt 属性文本](图片地址) 添加图片标题 也可以选择在括号中的URL之后添加标题 添加图片链接 也可以给图片添加一个超链接 格式：[![图片名称](图片链接) \"图片提示\"](超链接地址) 参考样式图片链接 这个图片链接用2作为网址变量[zhihu][2] 然后在文档的结尾为变量赋值（网址） [2]：https://pic4.zhimg.com/80/v2-a47051e92cf74930bedd7469978e6c08_hd.png 这个图片链接用2作为网址变量zhihu 设置图片尺寸 Markdown 没有办法指定图片的高度与宽度，如果需要的话，可以使用 img 标签 本地图片 使用相对路径插入图片 ![cmd-markdown-logo](images/图片.png) 使用绝对路径插入图片 使用 base64 格式 用base64转码工具把图片转成一段字符串，然后把字符串填到基础格式中链接的那个位置。链接1,链接2 图片插件 在 VS code 中安装 markdown-image 插件，可以通过界面的按钮快速插入图片，查看链接 视屏和GIF动画 添加视频和添加gif动画都使用标签，长宽可以自己定义 高级 HTML代码 直接写HTML就可以解析 print(\"mmd\") print(\"mmd\") 数学公式 数学公式在线编译网站 图表 流程图 主要的语法为 name=>type: describe，其中 type 主要有以下几种： 1.开始和结束：start end 2.输入输出：inputoutput 3.操作：operation 4.条件：condition 5.子程序：subroutine 流程图语法参考 甘特图 "},"Gitbook/07.peizhi.html":{"url":"Gitbook/07.peizhi.html","title":"GitBook 配置","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 book.json 常用配置 替代README.md PDF配置 plugins 插件配置 常用插件 structure 结构配置 variables 变量配置 links 链接导航 styles 自定义样式 配置示例 配置 book.json 所有的配置都以 JSON 格式存储在名为 ​book.json​ 的文件中 变量 说明 title 书籍的标题，默认值从 README 中提取 description 书籍说明，默认是从 README（第一段）中提取 author 作者，GitBook.com上创建项目时已填写 gitbook 规定生成书籍的GitBook版本号，格式为SemVer标准 language 语言，默认是 en，汉字：zh-hans，繁体：zh-tw isbn 图书的 ISBN 编号 direction 文本阅读方向：rtl(从右向左)，ltr(从左向右)，默认值依赖于 language 的值 styles 样式表，可选 website, ebook, pdf, mobi, epub(pdf , epub , mobi) plugins 插件列表 pluginsConfig 配置插件 structure 指定自述(README.md)，摘要(SUMMARY.md)，词汇表(Glossary.md)等的路径 variables 变量 pdf 导出 PDF 文件的一些配置信息 root 设置除 book.json 外，其他文件所在的文件夹 links 在左侧导航栏最上添加指定的自定义链接 output 生成PDF的选项 常用配置 { \"root\":\".\", \"author\":\"Jun Cao\", \"title\":\"Lee Gitbook\", \"language\":\"zh-hans\", \"description\":\"Gitbook 教程\", \"isbn\":\"000-0-00-000000-0\", \"direction\":\"ltr\", \"gitbook\":\">=3.2.3\" } root根目录为当前目录，使用默认的就好，此项可以删掉， 替代README.md { \"structure\": { \"readme\": \"INTRO.md\" } } PDF配置 变量 说明 pdf.pageNumbers 是否在每页底部添加页码（默认为 true ） pdf.fontSize 字体大小基数（默认为 12 ） pdf.fontFamily 字体样式（默认为 Arial ） pdf.paperSize 页面大小（默认为a4）。可选为：“a0”，“a1”，“a2”，“a3”，“a4”，“a5”，“a6”，“b0”，“b1”，“b2”，“b3”, “b4”，“b5”，“b6”，“legal”，“letter”，（默认为\"a4\"） pdf.margin.top 顶外边距（默认为 56 ） pdf.margin.bottom 底外边距（默认为 56 ） pdf.margin.left 左外边距（默认为 62 ） pdf.margin.right 右外边距（默认为 62 ） pdf.headerTemplate 自定义头部内容 pdf.footerTemplate 自定义尾部内容 { \"pdf\": { \"pageNumbers\": false, \"fontSize\": 12, \"paperSize\": \"a4\", \"margin\": { \"top\": 36, \"bottom\": 36, \"left\": 62, \"right\": 62 }, \"headerTemplate\": \"Header of the PDF with _TITLE_\", \"footerTemplate\": \"Footer HTML template. Available variables: _PAGENUM_, _TITLE_, _AUTHOR_ and\" } } 如果你不需要对输出的 pdf 做任何特定的配置，则不需要添加任何的配置，让 pdf 的输出格式保持默认就好 plugins 插件配置 常用插件 中文搜索:search-pro调整侧边栏宽度:splitter支付宝和微信打赏:donate structure 结构配置 变量说明structure.readme自述文件名（默认为“README.md”）structure.summary摘要文件名（默认为“SUMMARY.md”）structure.glossary词汇表文件名（默认为“GLOSSARY.md”），作者没用过structure.languages语言文件名（默认为LANGS.md)，作者没用过 { \"structure\":{ \"readme\":\"README.md\", \"summary\":\"SUMMARY.md\" } } variables 变量配置 定义一些书籍中的变量信息，定义在 book.json 中的变量可以在 book 作用域下被访问，如： 双括号语法在书籍中获取其中的数值 { \"variables\":{ \"blog\":\"https://blog.csdn.net/lili40342\" } } 模板 links 链接导航 通过 links 配置在左侧导航栏添加指定的链接导航，如：添加自己的博客链接，GIthub链接等等… { \"links\": { \"sidebar\": { \"CSDN\": \"https://blog.csdn.net/lili40342\", \"Gitee\": \"https://gitee.com/lili40342\" } } } styles 自定义样式 通过 styles 配置这个选项用来自定义书本的 CSS 样式 { \"styles\": { \"website\": \"styles/website.css\", \"ebook\": \"styles/ebook.css\", \"pdf\": \"styles/pdf.css\", \"mobi\": \"styles/mobi.css\", \"epub\": \"styles/epub.css\" } } 例如使标签有下边框，可以在website.css中设置 h1 , h2{ border-bottom: 1px solid #EFEAEA; } 配置示例 { \"root\": \"src\", \"author\": \"WorkerLee\", \"title\": \"这标题\", \"description\": \"这是描述\", \"language\": \"zh-hans\", \"direction\": \"ltr\", \"gitbook\": \">=3.2.3\", \"structure\": { \"readme\": \"README.md\", \"summary\": \"SUMMARY.md\" }, \"links\": { \"sidebar\": { \"CSDN\": \"https://blog.csdn.net/lili40342\", \"Gitee\": \"https://gitee.com/lili40342\" } }, \"styles\": { \"website\": \"styles/website.css\", \"ebook\": \"styles/ebook.css\", \"pdf\": \"styles/pdf.css\", \"mobi\": \"styles/mobi.css\", \"epub\": \"styles/epub.css\" }, \"plugins\": [ \"-lunr\", \"-search\", \"search-pro\", \"advanced-emoji\", \"tbfed-pagefooter\", \"splitter\", \"anchor-navigation-ex\", \"expandable-chapters-small\", \"code\", \"copy-code-button\", \"alerts\", \"hide-element\", \"favicon\", \"lightbox\", \"-sharing\" ], \"pluginsConfig\": { \"hide-element\": { \"elements\": [\".gitbook-link\"] }, \"favicon\": { \"shortcut\": \"favicon.ico\", \"bookmark\": \"favicon.ico\" }, \"tbfed-pagefooter\": { \"copyright\": \"Copyright &copy WorkerLee\", \"modify_label\": \"更新时间：\", \"modify_format\": \"YYYY-MM-DD HH:mm:ss\" }, \"anchor-navigation-ex\": { \"showLevel\": false, \"associatedWithSummary\": false, \"printLog\": false, \"multipleH1\": false, \"mode\": \"float\", \"showGoTop\": true, \"float\": { \"floatIcon\": \"fa fa-navicon\", \"showLevelIcon\": false, \"level1Icon\": \"fa fa-angle-double-right\", \"level2Icon\": \"fa fa-angle-double-right\", \"level3Icon\": \"fa fa-angle-double-right\" }, \"pageTop\": { \"showLevelIcon\": false, \"level1Icon\": \"fa fa-hand-o-right\", \"level2Icon\": \"fa fa-hand-o-right\", \"level3Icon\": \"fa fa-hand-o-right\" } } }, \"pdf\": { \"pageNumbers\": true, \"fontFamily\": \"Arial\", \"fontSize\": 12, \"paperSize\": \"a4\", \"margin\": { \"right\": 62, \"left\": 62, \"top\": 56, \"bottom\": 56 } } } "},"Gitbook/08.chajian.html":{"url":"Gitbook/08.chajian.html","title":"GitBook 插件","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 安装和删除插件 plugins 插件列表 pluginsConfig 插件配置属性 查找插件 安装插件 Gitbook 自带插件 删除自带插件 插件 安装和删除插件 plugins 插件列表 通过 plugins 配置可以配置书籍需要的插件列表。 { \"plugins\": [ \"github\", \"splitter\", ... ] } pluginsConfig 插件配置属性 通过插件配置可以配置插件列表 plugins 中对应插件的一些配置选项信息。 { \"plugins\": [\"favicon\"], \"pluginsConfig\": { \"favicon\": { \"shortcut\": \"favicon.ico\", \"bookmark\": \"favicon.ico\" } } } 查找插件 在 npm 搜索 gitbook 安装插件 安装插件有3中方法： 方法1：在book.json中添加相应插件和配置，然后执行 gitbook install 全部安装 方法2：使用 npm install pluginName 单独安装，然后写入配置 方法3：从源码GitHub地址中下载，放到 node_modules 文件夹里，（GitHub地址在进入插件地址右侧的GitHub链接） Gitbook 自带插件 Gitbook默认带有5个插件： highlight：代码高亮 search：导航栏查询功能（不支持中文） sharing：右上角分享功能 font-settings：字体设置（左上方的\"A\"符号） livereload：为 GitBook 实时重新加载 删除自带插件 系统自带插件可通过 在插件名前面加减号的方式去除掉，如-sharing \"plugins\": [ \"-search\" ] "},"Gitbook/081.changyongchajian.html":{"url":"Gitbook/081.changyongchajian.html","title":"常用插件","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 网站主题 theme-fexa theme-bookstyle theme-comscore 主题插件 评论插件 valine Gitalk 添加目录/回到顶部 page-treeview 创建页面目录 删除文字提示 anchor-navigation-ex 悬浮按钮目录(只显示1、2、3级标签) page-toc-button 生成悬浮页内目录 ancre-navigation 悬浮目录+回到顶部 back-to-top-button 添加回到顶部按钮 添加页脚 tbfed-pagefooter 页面添加页脚（简单版） page-copyright 页面添加页脚（复杂版） 代码应用 code 行号+复制 copy-code-button 只有复制 klipse 代码IDE交互（测试不好用） 代码高亮 highlight prism 代码颜色插件 目录折叠 chapter-fold 导航目录折叠 常用功能 pageview-count 阅读量计数 （测试失败） edit-link 添加编辑页面按钮 sharing-plus 分享插件 分享到其他网站 donate 打赏插件 search-pro 高级搜索 search-plus 中文搜索 splitter 侧边栏宽度调整 auto-scroll-table 表格滚动条 图标/图片 change_girls 可自动切换的背景 popup 图片点击查看，显示大图 lightbox 图片点击查看，大小不变 favicon 修改图标（未测试） insert-logo 插入logo custom-favicon 修改标题栏图标 advanced-emoji 支持 emoji 表情 github-buttons 按钮 github 图标 显示隐藏 hide-element 隐藏界面元素 sectionx 面板显示隐藏（未测试） accordion 折叠模块 警报 alerts flexible-alerts 其他插件 url-embed 插入外部页面 添加参考文献 添加测验功能 常用插件 网站主题 theme-fexa 功能：1.添加标题（头部导航） 2.添加搜索框，取消了左侧的搜索 3.目录栏样式设置4.页面左边距设置5.添加右侧章节目录6.去掉gitbook-link 缺点：1.只显示到3级标题（是否是设置问题） 2.章节目录超出界面，会出现滚动条，但是为啥会出现在页面的外面？？？ 3.章节目录无法左移，右侧多出的内容看不见~~ GitHub 地址 插件配置 { \"plugins\": [ \"theme-fexa\" ], \"variables\": { \"themeFexa\":{ \"nav\":[ // 这里添加导航链接 { \"url\":\"http://...\", \"target\":\"_blank\", \"name\": \"简易教程\" } ] }, }, \"pluginsConfig\": { \"theme-fexa\":{ \"search-placeholder\":\"输入关键字搜索\", //搜索框提示信息 \"logo\":\"./logo.png\", //logo地址 \"favicon\": \"./favicon.ico\" //ico地址 } } } theme-bookstyle 同 theme-fexa 插件 有关 gitbook 主题的插件可以在npm上搜索gitbook-plugin-theme 关键字 插件配置 } \"variables\": { \"themeFexa\": { \"nav\": [ { \"url\": \"http://...\", \"target\": \"_blank\", \"name\": \"test\" } ] } }, \"pluginsConfig\": { \"theme-bookstyle\": { \"search-placeholder\": \"输入关键字搜索\", \"logo\": \"./logo.png\", \"favicon\": \"./favicon.ico\" } } } theme-comscore 主题插件 修改标题和表格颜色 评论插件 valine 需要注册账号并获取appID和appKey 官网 插件配置 \"valine\": { \"appId\": \"your appId\", \"appKey\": \"your appKey\" } Gitalk 链接 添加目录/回到顶部 名称 功能 状态 备注 page-treeview 创建页面目录 好用 simple-page-toc 生成本页目录 安装失败 anchor-navigation-ex 悬浮按钮目录 不好用 只显示1、2、3级标签 page-toc-button 生成悬浮页内目录 不好用 ancre-navigation 悬浮目录和回到顶部 好用 back-to-top-button 添加回到顶部按钮 好用 page-treeview 创建页面目录 page-treeview 插件用于创建页面目录，所有 1# 到 6# 的标题都会被收录不需要在文档中插入标签，能够支持到 6 级目录，安装即可用。 GitHub 地址 插件配置 \"pluginsConfig\": { \"page-treeview\": { \"copyright\": \"Copyright &#169; aleen42\", \"minHeaderCount\": \"2\", \"minHeaderDeep\": \"2\" } } 删除文字提示 方法1：这个插件生成目录以后，下面有一行关于版权的文字。这行文字可以通过样式来进行控制，让它不显示出来。 .treeview__container { margin-bottom: 0px !important; } .treeview__container-title { display: none !important; } 方法2： 找到插件目录下的index.js文件：***/node_modules/ gitbook-plugin-page-treeview/lib/index.js 找到大约111行，删除这一行关于var copyRight的定义 下面113行的var insertTreeview中，删除+ copyRight，目前就不显示了 142行中的'copyright': 'Copyright &#169; aleen42',也可以删除 下面161行和163行和111行113行一样的，其实不删除也不显示了。 但是以后执行gitbook install就恢复了。 anchor-navigation-ex 悬浮按钮目录(只显示1、2、3级标签) 页面右上角生成一个灰色的目录按钮，鼠标移入后会显示灰色的目录。页面右下角生成一个灰色的箭头按钮，用于返回第一个 H1标签。 插件配置 \"pluginsConfig\": { \"anchor-navigation-ex\": { \"showLevel\": false, //标题是否显示层级序号.页面标题和导航中的标题都会加上层级显示。 \"showGoTop\": false // 是否显示返回顶部按钮 }, } 参数设置 page-toc-button 生成悬浮页内目录 插件配置 \"page-toc-button\": { \"maxTocDepth\": 2, \"minTocSize\": 2 } 参数说明 名称默认描述maxTocDepth2标题的最大深度（2 = h1 + h2 + h3）。不支持值> 2。minTocSize2显示toc按钮的最小toc条目数。 ancre-navigation 悬浮目录+回到顶部 添加Toc到侧边悬浮导航以及回到顶部按钮。比 page-toc-button 好用。 注意： 1.本插件只会提取 h[1-3] 标签作为悬浮导航 2.必须要以 h1 开始，直接写 h2 不会被提取 back-to-top-button 添加回到顶部按钮 回到最顶部，浏览器滚动条边距为0 GitHub 地址 添加页脚 tbfed-pagefooter 页面添加页脚（简单版） 在每个页面的最下方自动添加页脚信息，可用于在页面显示最后更新时间 GitHub 地址 插件配置 \"tbfed-pagefooter\": { \"copyright\": \"Copyright © levywang123@gmail.com 2020\", \"modify_label\": \"该文章最后修订时间：\", \"modify_format\": \"YYYY-MM-DD HH:mm:ss\" }, page-copyright 页面添加页脚（复杂版） GitHub 地址 在每个页面的最下方自动添加页脚配置的各个信息 插件配置 \"page-copyright\": { \"description\": \"footer\", \"copyright\": \"Copyright levywang123@gmail.com 2020\", \"timeColor\": \"#ccc\", \"copyrightColor\": \"#ddd\", \"utcOffset\": \"8\", \"style\": \"normal\", \"noPowered\": false, \"signature\": \"levy\", \"wisdom\": \"footer\", \"format\": \"YYYY-MM-dd hh:mm:ss\", }, 代码应用 code 行号+复制 为代码块添加行号和复制按钮，复制按钮可关闭 GitHub 地址 插件配置 \"code\": { \"copyButtons\": false } copy-code-button 只有复制 klipse 代码IDE交互（测试不好用） 代码高亮 highlight highlight 是 gitbook 自带的插件gitbook-plugin-highlight 使用 highlight.js 作为后台渲染引擎，highlight.js 支持的语言及简写可在官方手册中查看。 prism 代码颜色插件 此插件需要禁用 gitbook 自带的 highlight 插件 prism 支持的语言可在其官方网站查询 插件配置 \"prism\": { \"css\": [ \"prismjs/themes/prism-solarizedlight.css\" ] } 目录折叠 插件名称 功能 状态 备注 chapter-fold 左侧目录折叠 OK 1.有折叠箭头。2.有互斥 expandable-chapters 左侧目录折叠 不好用 1.有大箭头。2.无互斥 expandable-chapters-small 左侧目录折叠 不好用 1.有折叠箭头。2.无互斥 toggle-chapters 左侧目录折叠 最不好用 1.无箭头。2.无互斥 chapter-fold 导航目录折叠 1.支持多层目录，点击导航栏的标题名就可以实现折叠扩展。2.有箭头，有互斥 常用功能 pageview-count 阅读量计数 （测试失败） 记录每个文章页面被访问的次数。 edit-link 添加编辑页面按钮 单击编辑按钮可以跳转到GitHub进行编辑 sharing-plus 分享插件 gitbook默认只有Facebook、Google、Twiter、Weibo、Instapaper sharing-plus 插件可以有更多分享方式，也可以关闭指定分享方式。 需要将自带的插件给隐藏掉 -sharing 插件配置 \"sharing\": { \"douban\": false, \"facebook\": false, \"google\": true, \"hatenaBookmark\": false, \"instapaper\": false, \"line\": true, \"linkedin\": true, \"messenger\": false, \"pocket\": false, \"qq\": false, \"qzone\": true, \"stumbleupon\": false, \"twitter\": false, \"viber\": false, \"vk\": false, \"weibo\": true, \"whatsapp\": false, \"all\": [ \"douban\", \"facebook\", \"google\", \"hatenaBookmark\", \"instapaper\", \"linkedin\",\"twitter\", \"weibo\", \"messenger\",\"qq\", \"qzone\",\"viber\",\"vk\",\"weibo\", \"pocket\", \"stumbleupon\",\"whatsapp\" ] } 说明：为true的代表直接显示在页面顶端，为false的不显示，不写默认为false\"all\"中代表点击分享符号显示出来的支持的网站有： \"douban\", \"facebook\", \"google\", \"hatenaBookmark\", \"instapaper\", \"linkedin\",\"twitter\", \"weibo\", \"messenger\",\"qq\", \"qzone\",\"viber\",\"vk\",\"weibo\", \"pocket\", \"stumbleupon\",\"whatsapp\" 分享到其他网站 分享到其他网站 查看 URL 链接 修改 button.js 修改 package.json donate 打赏插件 配置打赏模块，在每篇文章底部都会加上一个按钮，点击显示图片 插件配置 \"donate\": { \"wechat\": \"/assets/img/donate/wechat.png\", \"alipay\": \"/assets/img/donate/alipay.png\", \"title\": \"\", \"button\": \"赏\", \"alipayText\": \"支付宝打赏\", \"wechatText\": \"微信打赏\" } search-pro 高级搜索 支持中英文，准确率更高一些。 需要将默认的search和lunr 插件去掉 search-plus 中文搜索 原搜索插件不支持中文搜索，所以使用该插件进行替换。需要将原插件进行去除掉 插件配置 \"plugins\": [ \"search-plus\", \"-lunr\", \"-search\"] splitter 侧边栏宽度调整 GitHub 地址 添加完插件后，在界面上 侧边栏可自行调整宽度 auto-scroll-table 表格滚动条 为避免表格过宽，增加滚动条,如果表格宽度不够，是不显示滚动条的 图标/图片 change_girls 可自动切换的背景 饱和度很淡 插件配置 \"change_girls\" : { \"time\" : 10, \"urls\" : [ \"girlUrl1\", \"girlUrl2\",...\"\" ] } 参数说明 time：图片的切换时间，单位是秒 urls： 一个数组，可以定义多个图片，只能使用互联网上的绝对地址 popup 图片点击查看，显示大图 插件用于点击图片时，打开新的网页用来查看高清大图 GitHub 地址 lightbox 图片点击查看，大小不变 favicon 修改图标（未测试） 修改网页标题的图标，显示个性化 ico 插件配置 \"favicon\": { \"shortcut\": \"assets/favicon.ico\", \"bookmark\": \"assets/favicon.ico\", \"appleTouch\": \"assets/favicon.ico\", \"appleTouchMore\": { \"120x120\": \"assets/favicon.ico\", \"180x180\": \"assets/favicon.ico\" } }, insert-logo 插入logo 在左侧导航栏上方插入logo。 url支持本地图片也支持网络图片链接 插件配置 \"insert-logo\": { \"url\": \"images/tupian.png\", \"style\": \"background: none; max-height: 30px; min-height: 30px\" } custom-favicon 修改标题栏图标 设置浏览器选项卡标题栏的小图标。 注意只支持ico后缀的图片，并且只支持本地图片，不支持网络图片链接。 插件配置 \"favicon\": \"icon/favicon.ico\" advanced-emoji 支持 emoji 表情 :bowtie: 表情查询 github-buttons 按钮 插件配置 \"github-buttons\": { \"repo\": \"darrenliuwei/gitbook\", \"types\": [\"star\"], \"size\": \"small\" }, github 图标 插件配置 \"github\": { \"url\": \"https://github.com/zhangjikai\" } 显示隐藏 hide-element 隐藏界面元素 主要用来隐藏不想看到的元素。 默认的gitbook左侧提示：Published with GitBook（测试没效果） GitHub 地址 插件配置 \"hide-element\": { \"elements\": [\".gitbook-link\"] } sectionx 面板显示隐藏（未测试） sectionx 效果比 accordion 差 accordion 折叠模块 这个插件名叫手风琴，可以实现将内容隐藏起来，外部显示模块标题和显示箭头，点击箭头可显示里面的内容。 %accordion%模块标题%accordion% 内容部分 %/accordion% %accordion%模块标题%accordion% 内容部分 %/accordion% [连接]（https://segmentfault.com/a/1190000019806829?utm_source=tag-newest） 警报 alerts > **[info] For info** > Use this for infomation messages. > **[warning] For warning** > Use this for warning messages. > **[danger] For danger** > Use this for danger messages. > **[success] For success** > Use this for success messages. [info] For info Use this for infomation messages. [warning] For warning Use this for warning messages. [danger] For danger Use this for danger messages. [success] For success Use this for success messages. flexible-alerts > [!NOTE] > 这是一个简单的Note类型的使用，所有的属性都是默认值。 > [!TIP] > 这是一个简单的Note类型的使用，所有的属性都是默认值。 > [!WARNING] > 这是一个简单的Note类型的使用，所有的属性都是默认值。 > [!DANGER] > 这是一个简单的Note类型的使用，所有的属性都是默认值。 [!NOTE] 这是一个简单的Note类型的使用，所有的属性都是默认值。 [!TIP] 这是一个简单的Note类型的使用，所有的属性都是默认值。 [!WARNING] 这是一个简单的Note类型的使用，所有的属性都是默认值。 [!DANGER] 这是一个简单的Note类型的使用，所有的属性都是默认值。 语法： > [!type|style:xx|label:xx|icon:xx|className:xx|labelVisibility:xx|iconVisibility:xx] > 内容部分 字段设置 字段介绍，如果不设置的表示选择默认，除了!type都不是必需 键 允许的值 说明 !type NOTE，TIP，WARNING和DANGER 警告级别设置 style 以下值之一: callout（默认）, flat 警告样式，见图19的左右不同 label 任何文字 警告块的标题位置，即Note这个字段位置（不支持中文） icon e.g. 'fa fa-info-circle' 一个有效的Font Awesome图标，那块小符号 className CSS类的名称 指定css文件，用于指定外观 labelVisibility 以下值之一：visible（默认），hidden 标签是否可见 iconVisibility 以下值之一：visible（默认），hidden 图标是否可见 效果图： 参数设置 自定义设置不是必需的 \"flexible-alerts\": { \"style\": \"callout\", \"comment\": { \"label\": \"Comment\", \"icon\": \"fa fa-comments\", \"className\": \"info\" } } 其他插件 url-embed 插入外部页面 可向页面中添加一个窗口，显示其他页面 参数设置 添加参考文献 插件 添加测验功能 插件 exercises，在文档中增加交互练习内容，目前只支持js语言。 quiz，在文档中增加测验内容，支持单选、多选、排序。 include-codeblock，使得GitBook能引用外部独立文档。 localized-footer，为GitBook的每个页面添加页脚内容。 page-footer-ex，为文档添加修改时间和版权声明页脚。 changyan，为GitBook页面添加畅言评论框。 iframely, 在页面中嵌入常见视频网站内容。 bibtex-indexed-cite，使用bibtex格式，自动生成参考文献。 "},"Gitbook/09.mingling.html":{"url":"Gitbook/09.mingling.html","title":"GitBook 命令","keywords":"","body":"常用命令 命令 说明 gitbook init 创建新项目 gitbook init ./directory 创建新项目到指定目录下 gitbook build 生成静态网页 gitbook build --gitbook=2.0.1 生成时指定 gitbook 的版本, 本地没有会先下载 gitbook build ./ --log=debug --debug 指定 log 的级别 gitbook build --debug 输出错误信息 gitbook serve 生成静态网页并运行服务器 gitbook help 列出 gitbook 所有的命令 gitbook --help 列出 gitbook-cli 所有的命令 gitbook ls 列出本地所有的 gitbook 版本 gitbook update 更新到 gitbook 的最新版本 gitbook fetch 通过 gitbook-cli 安装指定版本 gitbook fetch 标签/版本号 安装对应的 gitbook 版本 gitbook uninstall 2.0.1 卸载对应的gitbook版本 gitbook install 安装插件 "},"Gitbook/changyong.html":{"url":"Gitbook/changyong.html","title":"常用设置","keywords":"","body":"常用设置 添加专业术语设置忽略文件 "},"Gitbook/SEO.html":{"url":"Gitbook/SEO.html","title":"SEO","keywords":"","body":"描述 文件顶部添加如下格式描述内容，可实现SEO优化 --- description: 页面描述内容 --- 描述内容不会呈现，而是编译到页面的 meta 标签中。 "},"Gitbook/shuyu.html":{"url":"Gitbook/shuyu.html","title":"添加专业术语","keywords":"","body":"添加专业术语 将一些专业名词，名词或者术语的解释配置定义在文件中，在书籍中使用到对应专业术语的地方就可以链接到专业解释的地方。 在 Gitbook 中使用 GLOSSARY.md 来进行专业术语列表的配置 定义专业术语： 定义的方式是在 GLOSSARY.md 使用 ## 列表来定义专业术语的列表。 术语为二级标题，只支持英文术语 实例： 步骤一：在项目文件下新建一个 GLOSSARY.md 文件，并添加专业术语的描述信息 ## npm Definition for this term ## Git Definition for this term ## markdown Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。 这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。 ## gitbook GitBook 是一个基于 Node.js 的命令行工具，可使用 Github/Git 和 Markdown 来制作精美的电子书。 ## Term Definition for this term ## Another term With it's definition, this can contain bold text and all other kinds of inline markup ... 步骤二：使用专业术语在文档中直接输入对应的术语即可 >* Node.js >>* 6.17.1（7以上的版本不能使用） >* npm >* Git >* gitbook >>* 2.6.7（3以上的版本生成的HTML不能直接用双击打开） >* gitbook-cli 查看效果 有专业术语的链接会有相应的提示（字体蓝色、下划线），将鼠标放在链接上，会有相应的提示，单击也可跳转到术语定义列表 "},"Gitbook/hulue.html":{"url":"Gitbook/hulue.html","title":"设置忽略文件","keywords":"","body":"设置忽略文件 在 SUMMARY.md 中未列出的文件。所有静态文件，包含图片、JS、CSS都会复制到对应目录下，对于一些不需要的文件，GitBook将读取 .gitignore、.bookignore 和 .ignore 文件，以获取要忽略的文件和文件夹的列表。被忽略的文件不会被上传到版本中。这些文件的语法和 Git 中的 gitignore 语法相同。 # This is a comment # Ignore the file test.md test.md # Ignore everything in the directory \"bin\" bin/* "},"Gitbook/98-1.mulu.html":{"url":"Gitbook/98-1.mulu.html","title":"生成目录","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 手动生成 方法1：使用 markdown 语法添加链接 方法2：使用 html a 标签添加链接 自动生成 方法1：使用[toc] 方法2：使用 doctoc 插件 安装 doctoc 执行命令： 提示： 方法3：使用 page-treeview 插件 生成本页目录 手动生成 方法1：使用 markdown 语法添加链接 目录 - 一、[链接1](#index1) - 二、[链接2](#index2) - 这是链接1 - 这是链接2 目录 一、链接1 二、链接2 这是链接1 这是链接2 方法2：使用 html a 标签添加链接 目录 - 一、链接3 - 二、链接4 - 这是链接3 - 这是链接4 目录 一、链接3 二、链接4 这是链接3 这是链接4 自动生成 方法1：使用[toc] 在文章中输入 [toc]，即可在对应位置插入目录，凡是文章标题带有#（1-6个）的都会被捕获到目录中 注意：不是对所有的markdown模板都通用 方法2：使用 doctoc 插件 安装 doctoc npm i doctoc -g 执行命令： 在需要生成目录的 .md 文件夹下进入 CMD，输入命令 doctoc 文件名.md 提示： DocToccing single file \"markdown自动生成目录.md\" for github.com. ================== \"markdown 自动生成目录.md\" will be updated Everything is OK. 在指定的.md文件的头部就会出现目录，但是链接好像挂掉了~~~ 方法3：使用 page-treeview 插件 "},"Gitbook/fabu.html":{"url":"Gitbook/fabu.html","title":"发布书籍","keywords":"","body":"发布书籍 在我们编写完成书籍后，可以将其编译的相关书籍的电子书文件发布给别人共享，目前主流的方式： 将编译的 HTML 网站文件部署到自己的互联网中的 web 服务器中，供大家访问浏览，这样大家就可以实现公网共享访问浏览 将编译的 HTML 网站文件部署到局域网下的web服务器，供有限的局域网内人员共享访问浏览，如公司的资料文档共享 将编译的 HTML 网站文件部署到互联网中的代管服务器，比如：Github pages服务， Gitee pages服务等等，同样可以实现公网共享访问浏览 将编译的 HTML、PDF、ePub、Mobi等文件以文件的方式共享给别人 "},"Gitbook/Github-Pages.html":{"url":"Gitbook/Github-Pages.html","title":"发布到 Github Pages","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 1. 申请 Github 账号 2. 创建一个项目仓库 2.1 新建仓库 2.2 设置仓库信息 2.3 创建完成 3. 推送静态网站文件到 Github 仓库中 3.1 创建Git 3.2 设置 SSH Key 3.3 获取 SSH Key 3.4 添加 SSH Key 3.5 连接远程仓库 3.6 创建分支 4. 创建 Pages 服务并部署自己的静态网站 5. Pages 配置 发布到 Github Pages 1. 申请 Github 账号 2. 创建一个项目仓库 2.1 新建仓库 2.2 设置仓库信息 2.3 创建完成 3. 推送静态网站文件到 Github 仓库中 3.1 创建Git 在项目文件夹下进入CMD终端，输入 git inin 命令，会创建一个 .git 的隐藏文件 3.2 设置 SSH Key 输入命令 ssh-keygen -t rsa 回车 3.3 获取 SSH Key 输入命令 cat ~/.ssh/id_rsa.pub ，复制 SSH 3.4 添加 SSH Key 3.5 连接远程仓库 3.6 创建分支 由于源码文件和静态文件在一个仓库中，所以好的准则将按如下分支： master, 保存书籍源码.md文件 gh-pages, 保存书籍编译后的 HTML 文件，即_book/ 4. 创建 Pages 服务并部署自己的静态网站 5. Pages 配置 "},"Gitbook/Gitee-Pages.html":{"url":"Gitbook/Gitee-Pages.html","title":"发布到 Gitee Pages","keywords":"","body":"发布到 Gitee Pages 1.申请 Github 账号 2.创建一个项目仓库 3.推送静态网站文件到 Github 仓库中 4.创建 Pages 服务并部署自己的静态网站 5.Pages 配置 "},"Gitbook/Gitbook.html":{"url":"Gitbook/Gitbook.html","title":"发布到 Gitbook","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 gitbook 与 github 关联 自定义域名 发布到 gitbook gitbook 与 github 关联 需要注册 gitbook 和 github 账号（由于 gitbook 需要翻墙才能注册账号，所以失败了 ） 教程 自定义域名 自定义域名 "},"Gitbook/VSCode.html":{"url":"Gitbook/VSCode.html","title":"VSCode","keywords":"","body":"VSCode "},"Gitbook/VSCodeyulan.html":{"url":"Gitbook/VSCodeyulan.html","title":"VSCode预览","keywords":"","body":"VS Code 开启对 Markdown 实时预览 在VSCode中安装插件可以实现对.md文件的实时预览 方法1：markdown 1.用 VS code 打开 .md 文件2.按 F1 输入 markdown 选择下图的选项即可 如果查找不到，查看链接 方法2：Office Viewer(Markdown Editor) 链接 "},"Gitbook/VSCodeyunxing.html":{"url":"Gitbook/VSCodeyunxing.html","title":"VSCode运行Gitbook","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 打开终端 初始化配置 VS Code 运行 Gitbook 打开终端 初始化配置 1.在vscode终端里输入npm init，然后一直空格直到出现完yes 成功后出现以下这个json文件 2.更改文件代码并保存 { \"name\": \"vswebdesgin\", \"version\": \"1.0.0\", \"description\": \"\", \"main\": \"index.js\", \"scripts\": { \"serve\": \"gitbook serve\", \"build\": \"gitbook build\" }, \"author\": \"\", \"license\": \"ISC\" } 3.运行服务 npm run serve "},"Gitbook/GitBookEditor.html":{"url":"Gitbook/GitBookEditor.html","title":"GitBookEditor","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 下载安装 更改保存地址 创建项目 使用 Markdown 编辑 页面跳转 GitBookEditor GitBook 官方客户端编辑器，支持 Win、Linux、Mac 系统。 下载安装 下载地址 下载后得到一个.zip 格式的文件，解压后为.exe文件，双击打开即可 更改保存地址 点击 \"GitBook Editor\" - \"change library path\" 更改保存地址 创建项目 在登录窗口依次点击 \"Do that later\" — \"+New Book\" - \"输入项目名称\" - \"Confirm\" 使用 Markdown 编辑 击右下脚 “？” 按钮，选择 Markdown 编辑模式 ，右侧会出现预览窗口 页面跳转 如果生成的静态文件无法跳转，那时因为 gitbook3.0 以后不支持本地预览 解决方法： 1、修改js文件 1.找到项目目录下的theme.js文件 2.将if(m)改成if(false) 3.提示：定位代码位置直接搜索： if(m)for(n.handler&& 这样修改又有一个问题：字体大小和隐藏目录按钮失效。 2、生成指定版本的gitbook -gitbook build --gitbook=2.6.7 系统会自动下载2.6.7版本。2.6.7版本依赖nodejs6，要确保nodejs是6版本。 "},"GLOSSARY.html":{"url":"GLOSSARY.html","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 Term Another term markdown Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。 这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。 Term Definition for this term Another term With it's definition, this can contain bold text and all other kinds of inline markup ... "}}